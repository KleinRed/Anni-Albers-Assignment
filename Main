#include "ofApp.h"

//--------------------------------------------------------------
void ofApp::setup(){
	ofSetWindowShape(900, 900);
}

//--------------------------------------------------------------
void ofApp::update(){

}

//--------------------------------------------------------------
void ofApp::draw(){
	ofBackground(242, 236, 229);
	int division1 = 6;
	int division2 = 8;
	float shift = ofGetWidth() / division1 / division2;
	
	for (int y = 1; y < division1 - 1; y++)
	{
		for (int x = 1; x < division1 - 1; x++)
		{	
			int d = (x + y) % 2;

			for (int i = 0; i < 8 ; i++)
			{
				//get the y coordination of pts:
					
				float y1 = (float)y / division1 * ofGetHeight();
				float y2 = (float)(y + 1)/ division1 * ofGetHeight();
				
				float ycoord = ofMap(i, 0, division2, y1, y2);

					

				for (int j = 0; j < 8; j++)
				{
					//get the x coordination of pts:

					float x1 = (float)x / division1 * ofGetHeight();
					float x2 = (float)(x + 1) / division1 * ofGetHeight();
						
					float xcoord = ofMap(j, 0, division2, x1, x2);

					if (d == 0)
						{
							
						if ((i + j) % 4 < 2)
							{
								ofDrawTriangle(xcoord, ycoord, xcoord + shift, ycoord + shift, xcoord, ycoord + shift);
							}

							else
							{
								ofDrawTriangle(xcoord, ycoord, xcoord + shift, ycoord, xcoord + shift, ycoord + shift);
							}
						}

					else
						{

						if ((j - i + 8) % 4 < 2)
							{
								ofDrawTriangle(xcoord + shift, ycoord, xcoord + shift, ycoord + shift, xcoord, ycoord + shift);
								
							}

							else
							{
								ofDrawTriangle(xcoord + shift, ycoord, xcoord, ycoord, xcoord, ycoord + shift);
							}
						}
					}
				}
			int t = ofGetElapsedTimef();
			float r = t % 4 + 1;
				if ( y == r )
				{
					ofSetColor(214, 159, 55);
				}
				else
				{
					ofSetColor(90, 90, 90);
				}

		}
	}

}

//--------------------------------------------------------------
void ofApp::keyPressed(int key){

}

//--------------------------------------------------------------
void ofApp::keyReleased(int key){

}

//--------------------------------------------------------------
void ofApp::mouseMoved(int x, int y ){

}

//--------------------------------------------------------------
void ofApp::mouseDragged(int x, int y, int button){

}

//--------------------------------------------------------------
void ofApp::mousePressed(int x, int y, int button){

}

//--------------------------------------------------------------
void ofApp::mouseReleased(int x, int y, int button){

}

//--------------------------------------------------------------
void ofApp::mouseEntered(int x, int y){

}

//--------------------------------------------------------------
void ofApp::mouseExited(int x, int y){

}

//--------------------------------------------------------------
void ofApp::windowResized(int w, int h){

}

//--------------------------------------------------------------
void ofApp::gotMessage(ofMessage msg){

}

//--------------------------------------------------------------
void ofApp::dragEvent(ofDragInfo dragInfo){ 

}
